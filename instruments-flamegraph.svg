<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="322" onload="init(evt)" viewBox="0 0 1200 322" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) { 
		details = document.getElementById("details").firstChild; 
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
		
		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}
		
		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;
		
		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) { 
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}
		
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) { 
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;
		
		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;
		
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";
		
		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";
		
		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}	

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="322.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="305" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="305" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tlv_get_addr (5 samples, 0.04%)</title><rect x="1189.6" y="177" width="0.4" height="15.0" fill="rgb(227,87,44)" rx="2" ry="2" />
<text text-anchor="" x="1192.58" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_platform_bzero$VARIANT$Unknown (3 samples, 0.02%)</title><rect x="760.1" y="113" width="0.2" height="15.0" fill="rgb(216,155,12)" rx="2" ry="2" />
<text text-anchor="" x="763.07" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>num::flt2dec::strategy::grisu::format_shortest_opt::round_and_weed::h979b3acc7b613b2db9c (1 samples, 0.01%)</title><rect x="763.6" y="97" width="0.1" height="15.0" fill="rgb(214,201,39)" rx="2" ry="2" />
<text text-anchor="" x="766.59" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::stdio::StdoutLock$LT$$u27$a$GT$.Write::write::hbd7418ed30863eb1p0g (158 samples, 1.13%)</title><rect x="764.2" y="97" width="13.3" height="15.0" fill="rgb(212,195,6)" rx="2" ry="2" />
<text text-anchor="" x="767.17" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>write (146 samples, 1.04%)</title><rect x="765.0" y="65" width="12.4" height="15.0" fill="rgb(249,141,32)" rx="2" ry="2" />
<text text-anchor="" x="768.04" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_entry_for_pointer_no_lock (2 samples, 0.01%)</title><rect x="785.3" y="129" width="0.1" height="15.0" fill="rgb(221,158,13)" rx="2" ry="2" />
<text text-anchor="" x="788.29" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::main (13,995 samples, 99.98%)</title><rect x="10.2" y="209" width="1179.8" height="15.0" fill="rgb(217,192,19)" rx="2" ry="2" />
<text text-anchor="" x="13.23" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >profiling::main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_mutex_lock (2 samples, 0.01%)</title><rect x="758.2" y="145" width="0.2" height="15.0" fill="rgb(222,169,33)" rx="2" ry="2" />
<text text-anchor="" x="761.21" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_mutex_lock (4 samples, 0.03%)</title><rect x="778.5" y="145" width="0.3" height="15.0" fill="rgb(249,223,44)" rx="2" ry="2" />
<text text-anchor="" x="781.49" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="777.5" y="145" width="0.3" height="15.0" fill="rgb(223,181,31)" rx="2" ry="2" />
<text text-anchor="" x="780.49" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>mach_vm_deallocate (8 samples, 0.06%)</title><rect x="165.5" y="145" width="0.7" height="15.0" fill="rgb(216,222,0)" rx="2" ry="2" />
<text text-anchor="" x="168.48" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_size_try_large (3 samples, 0.02%)</title><rect x="783.5" y="129" width="0.2" height="15.0" fill="rgb(228,54,28)" rx="2" ry="2" />
<text text-anchor="" x="786.52" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_os_lock_spin_lock (2 samples, 0.01%)</title><rect x="782.6" y="129" width="0.2" height="15.0" fill="rgb(205,115,35)" rx="2" ry="2" />
<text text-anchor="" x="785.64" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_malloc (3 samples, 0.02%)</title><rect x="780.3" y="129" width="0.3" height="15.0" fill="rgb(250,204,43)" rx="2" ry="2" />
<text text-anchor="" x="783.33" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OSAtomicCompareAndSwapPtrBarrier$VARIANT$mp (2 samples, 0.01%)</title><rect x="758.1" y="145" width="0.1" height="15.0" fill="rgb(213,22,32)" rx="2" ry="2" />
<text text-anchor="" x="761.08" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::Formatter$LT$$u27$a$GT$::write_formatted_parts::h14f15b0b84f0d1bbkjX (15 samples, 0.11%)</title><rect x="760.7" y="113" width="1.3" height="15.0" fill="rgb(249,153,30)" rx="2" ry="2" />
<text text-anchor="" x="763.71" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>free (6 samples, 0.04%)</title><rect x="164.6" y="177" width="0.5" height="15.0" fill="rgb(221,220,51)" rx="2" ry="2" />
<text text-anchor="" x="167.57" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (13,998 samples, 100%)</title><rect x="10.0" y="273" width="1180.0" height="15.0" fill="rgb(248,159,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::heap::deallocate (56 samples, 0.40%)</title><rect x="164.4" y="193" width="4.7" height="15.0" fill="rgb(247,56,21)" rx="2" ry="2" />
<text text-anchor="" x="167.41" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_kernelrpc_mach_vm_deallocate_trap (8 samples, 0.06%)</title><rect x="165.5" y="129" width="0.7" height="15.0" fill="rgb(214,0,12)" rx="2" ry="2" />
<text text-anchor="" x="168.48" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_os_lock_spin_lock (2 samples, 0.01%)</title><rect x="162.5" y="129" width="0.1" height="15.0" fill="rgb(227,106,14)" rx="2" ry="2" />
<text text-anchor="" x="165.47" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::stdio::StdoutLock$LT$$u27$a$GT$.Write::write::hbd7418ed30863eb1p0g (10 samples, 0.07%)</title><rect x="761.1" y="65" width="0.9" height="15.0" fill="rgb(212,9,3)" rx="2" ry="2" />
<text text-anchor="" x="764.14" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::stdio::stdout::he9dfc0cbcba2e0c18Xg (17 samples, 0.12%)</title><rect x="777.8" y="161" width="1.4" height="15.0" fill="rgb(251,27,44)" rx="2" ry="2" />
<text text-anchor="" x="780.77" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>write (2 samples, 0.01%)</title><rect x="777.4" y="81" width="0.1" height="15.0" fill="rgb(232,119,15)" rx="2" ry="2" />
<text text-anchor="" x="780.35" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_dyld_start (2 samples, 0.01%)</title><rect x="10.0" y="257" width="0.1" height="15.0" fill="rgb(242,103,15)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__rust_deallocate (1 samples, 0.01%)</title><rect x="781.8" y="145" width="0.1" height="15.0" fill="rgb(234,21,30)" rx="2" ry="2" />
<text text-anchor="" x="784.76" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__mtx_droplock (2 samples, 0.01%)</title><rect x="779.0" y="129" width="0.2" height="15.0" fill="rgb(224,24,4)" rx="2" ry="2" />
<text text-anchor="" x="782.02" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>madvise (63 samples, 0.45%)</title><rect x="785.6" y="129" width="5.3" height="15.0" fill="rgb(226,92,49)" rx="2" ry="2" />
<text text-anchor="" x="788.56" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::raw_vec::RawVec(T).Drop::drop (111 samples, 0.79%)</title><rect x="781.7" y="177" width="9.4" height="15.0" fill="rgb(254,4,13)" rx="2" ry="2" />
<text text-anchor="" x="784.69" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (31 samples, 0.22%)</title><rect x="161.8" y="177" width="2.6" height="15.0" fill="rgb(222,28,5)" rx="2" ry="2" />
<text text-anchor="" x="164.80" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_mutex_lock (2 samples, 0.01%)</title><rect x="779.2" y="161" width="0.1" height="15.0" fill="rgb(237,215,32)" rx="2" ry="2" />
<text text-anchor="" x="782.17" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::heap::deallocate (111 samples, 0.79%)</title><rect x="781.7" y="161" width="9.4" height="15.0" fill="rgb(226,96,0)" rx="2" ry="2" />
<text text-anchor="" x="784.69" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_common::unwind::try::try_fn::h15411707225561299101 (13,996 samples, 99.99%)</title><rect x="10.1" y="225" width="1179.9" height="15.0" fill="rgb(206,39,6)" rx="2" ry="2" />
<text text-anchor="" x="13.13" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sys_common::unwind::try::try_fn::h15411707225561299101</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_entry_for_pointer_no_lock (2 samples, 0.01%)</title><rect x="164.9" y="145" width="0.2" height="15.0" fill="rgb(232,180,9)" rx="2" ry="2" />
<text text-anchor="" x="167.91" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_size (2 samples, 0.01%)</title><rect x="164.7" y="161" width="0.2" height="15.0" fill="rgb(243,144,31)" rx="2" ry="2" />
<text text-anchor="" x="167.71" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__rust_try (13,996 samples, 99.99%)</title><rect x="10.1" y="241" width="1179.9" height="15.0" fill="rgb(213,199,19)" rx="2" ry="2" />
<text text-anchor="" x="13.13" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__rust_try</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>madvise (31 samples, 0.22%)</title><rect x="166.4" y="161" width="2.6" height="15.0" fill="rgb(208,19,35)" rx="2" ry="2" />
<text text-anchor="" x="169.42" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>free_large (47 samples, 0.34%)</title><rect x="165.1" y="177" width="3.9" height="15.0" fill="rgb(206,192,14)" rx="2" ry="2" />
<text text-anchor="" x="168.09" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_malloc_should_clear (27 samples, 0.19%)</title><rect x="162.2" y="145" width="2.2" height="15.0" fill="rgb(253,142,2)" rx="2" ry="2" />
<text text-anchor="" x="165.17" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::Write::write_fmt::Adaptor$LT$$u27$a$C$$u20$T$GT$.fmt..Write::write_str::h11171456811330866458 (164 samples, 1.17%)</title><rect x="763.7" y="129" width="13.8" height="15.0" fill="rgb(208,29,32)" rx="2" ry="2" />
<text text-anchor="" x="766.70" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc_zone_malloc (17 samples, 0.12%)</title><rect x="780.3" y="145" width="1.4" height="15.0" fill="rgb(214,145,49)" rx="2" ry="2" />
<text text-anchor="" x="783.26" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::stdio::_print::hbfd2a385e1936ffcV5g (268 samples, 1.91%)</title><rect x="757.0" y="177" width="22.6" height="15.0" fill="rgb(249,79,52)" rx="2" ry="2" />
<text text-anchor="" x="760.00" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tlv_get_addr (3 samples, 0.02%)</title><rect x="779.3" y="161" width="0.3" height="15.0" fill="rgb(206,36,14)" rx="2" ry="2" />
<text text-anchor="" x="782.33" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os_lock_lock (1 samples, 0.01%)</title><rect x="782.8" y="129" width="0.1" height="15.0" fill="rgb(231,192,2)" rx="2" ry="2" />
<text text-anchor="" x="785.80" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::sum_floats (4,727 samples, 33.77%)</title><rect x="791.1" y="177" width="398.5" height="15.0" fill="rgb(223,223,52)" rx="2" ry="2" />
<text text-anchor="" x="794.06" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >profiling::sum_floats</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::heap::allocate (31 samples, 0.22%)</title><rect x="161.8" y="193" width="2.6" height="15.0" fill="rgb(227,169,33)" rx="2" ry="2" />
<text text-anchor="" x="164.77" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OSAtomicCompareAndSwapPtrBarrier$VARIANT$mp (5 samples, 0.04%)</title><rect x="778.1" y="145" width="0.4" height="15.0" fill="rgb(213,153,17)" rx="2" ry="2" />
<text text-anchor="" x="781.11" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>deallocate_pages (8 samples, 0.06%)</title><rect x="165.5" y="161" width="0.7" height="15.0" fill="rgb(242,209,44)" rx="2" ry="2" />
<text text-anchor="" x="168.48" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_platform_memmove$VARIANT$Unknown (3 samples, 0.02%)</title><rect x="761.6" y="33" width="0.3" height="15.0" fill="rgb(228,104,6)" rx="2" ry="2" />
<text text-anchor="" x="764.61" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>free (21 samples, 0.15%)</title><rect x="782.0" y="145" width="1.7" height="15.0" fill="rgb(234,212,14)" rx="2" ry="2" />
<text text-anchor="" x="784.99" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::write::h31b8064982f64235f1W (226 samples, 1.61%)</title><rect x="758.4" y="145" width="19.1" height="15.0" fill="rgb(253,14,49)" rx="2" ry="2" />
<text text-anchor="" x="761.40" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_malloc (5 samples, 0.04%)</title><rect x="781.1" y="113" width="0.4" height="15.0" fill="rgb(227,33,13)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt::float_to_decimal_common::h3369673608471339540 (57 samples, 0.41%)</title><rect x="758.9" y="129" width="4.8" height="15.0" fill="rgb(239,33,27)" rx="2" ry="2" />
<text text-anchor="" x="761.91" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>deallocate_pages (10 samples, 0.07%)</title><rect x="784.5" y="129" width="0.8" height="15.0" fill="rgb(217,106,14)" rx="2" ry="2" />
<text text-anchor="" x="787.46" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_size (7 samples, 0.05%)</title><rect x="782.9" y="129" width="0.6" height="15.0" fill="rgb(216,133,9)" rx="2" ry="2" />
<text text-anchor="" x="785.91" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start (13,996 samples, 99.99%)</title><rect x="10.1" y="257" width="1179.9" height="15.0" fill="rgb(226,183,45)" rx="2" ry="2" />
<text text-anchor="" x="13.13" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_entry_free_no_lock (2 samples, 0.01%)</title><rect x="785.4" y="129" width="0.2" height="15.0" fill="rgb(218,115,49)" rx="2" ry="2" />
<text text-anchor="" x="788.41" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_entry_for_pointer_no_lock (2 samples, 0.01%)</title><rect x="166.2" y="161" width="0.2" height="15.0" fill="rgb(209,170,12)" rx="2" ry="2" />
<text text-anchor="" x="169.19" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::buffered::BufWriter$LT$W$GT$.Write::write::h1426583886282006151 (6 samples, 0.04%)</title><rect x="761.5" y="49" width="0.5" height="15.0" fill="rgb(235,4,45)" rx="2" ry="2" />
<text text-anchor="" x="764.49" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc_zone_malloc (28 samples, 0.20%)</title><rect x="162.0" y="161" width="2.4" height="15.0" fill="rgb(250,104,53)" rx="2" ry="2" />
<text text-anchor="" x="165.05" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_malloc (21 samples, 0.15%)</title><rect x="162.6" y="129" width="1.8" height="15.0" fill="rgb(215,85,41)" rx="2" ry="2" />
<text text-anchor="" x="165.60" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>free_large (84 samples, 0.60%)</title><rect x="783.7" y="145" width="7.2" height="15.0" fill="rgb(208,147,5)" rx="2" ry="2" />
<text text-anchor="" x="786.75" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>mach_vm_deallocate (10 samples, 0.07%)</title><rect x="784.5" y="113" width="0.8" height="15.0" fill="rgb(247,57,46)" rx="2" ry="2" />
<text text-anchor="" x="787.46" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_os_lock_spin_lock (3 samples, 0.02%)</title><rect x="780.8" y="113" width="0.3" height="15.0" fill="rgb(240,40,28)" rx="2" ry="2" />
<text text-anchor="" x="783.83" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::buffered::BufWriter$LT$W$GT$::flush_buf::h3403140409550101994 (150 samples, 1.07%)</title><rect x="764.7" y="81" width="12.7" height="15.0" fill="rgb(254,68,32)" rx="2" ry="2" />
<text text-anchor="" x="767.68" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::Write::write_fmt::Adaptor$LT$$u27$a$C$$u20$T$GT$.fmt..Write::write_str::h11171456811330866458 (12 samples, 0.09%)</title><rect x="761.0" y="97" width="1.0" height="15.0" fill="rgb(214,48,15)" rx="2" ry="2" />
<text text-anchor="" x="763.97" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::multiply_ints (12,110 samples, 86.51%)</title><rect x="169.1" y="193" width="1020.9" height="15.0" fill="rgb(240,76,19)" rx="2" ry="2" />
<text text-anchor="" x="172.14" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >profiling::multiply_ints</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>large_entry_for_pointer_no_lock (2 samples, 0.01%)</title><rect x="783.6" y="113" width="0.1" height="15.0" fill="rgb(212,82,12)" rx="2" ry="2" />
<text text-anchor="" x="786.55" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>(Unknown Address) (2 samples, 0.01%)</title><rect x="161.5" y="193" width="0.2" height="15.0" fill="rgb(221,7,29)" rx="2" ry="2" />
<text text-anchor="" x="164.52" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OSAtomicCompareAndSwapPtrBarrier$VARIANT$mp (2 samples, 0.01%)</title><rect x="777.5" y="129" width="0.2" height="15.0" fill="rgb(206,212,32)" rx="2" ry="2" />
<text text-anchor="" x="780.54" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OSAtomicCompareAndSwapPtrBarrier$VARIANT$mp (2 samples, 0.01%)</title><rect x="778.9" y="129" width="0.1" height="15.0" fill="rgb(235,192,26)" rx="2" ry="2" />
<text text-anchor="" x="781.87" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::buffered::BufWriter$LT$W$GT$.Write::write::h1426583886282006151 (3 samples, 0.02%)</title><rect x="764.4" y="81" width="0.3" height="15.0" fill="rgb(249,60,0)" rx="2" ry="2" />
<text text-anchor="" x="767.44" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>num::flt2dec::strategy::grisu::format_shortest_opt::h81d3b370ceb11ea68Sc (19 samples, 0.14%)</title><rect x="762.1" y="113" width="1.6" height="15.0" fill="rgb(229,28,30)" rx="2" ry="2" />
<text text-anchor="" x="765.08" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_malloc_should_clear (13 samples, 0.09%)</title><rect x="780.6" y="129" width="1.1" height="15.0" fill="rgb(236,31,15)" rx="2" ry="2" />
<text text-anchor="" x="783.56" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::stdio::Stdout.Write::write_fmt::hec41780838248fc16Zg (238 samples, 1.70%)</title><rect x="757.7" y="161" width="20.1" height="15.0" fill="rgb(221,204,27)" rx="2" ry="2" />
<text text-anchor="" x="760.68" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vec::Vec$LT$T$GT$::reserve::h8109719695664856757 (1 samples, 0.01%)</title><rect x="761.9" y="33" width="0.1" height="15.0" fill="rgb(230,192,15)" rx="2" ry="2" />
<text text-anchor="" x="764.88" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>malloc (23 samples, 0.16%)</title><rect x="779.7" y="161" width="2.0" height="15.0" fill="rgb(238,123,6)" rx="2" ry="2" />
<text text-anchor="" x="782.70" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_kernelrpc_mach_vm_deallocate_trap (10 samples, 0.07%)</title><rect x="784.5" y="97" width="0.8" height="15.0" fill="rgb(251,101,52)" rx="2" ry="2" />
<text text-anchor="" x="787.46" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::Write::write_all::h9108690104785495254 (11 samples, 0.08%)</title><rect x="761.1" y="81" width="0.9" height="15.0" fill="rgb(230,185,40)" rx="2" ry="2" />
<text text-anchor="" x="764.05" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>szone_size_try_large (2 samples, 0.01%)</title><rect x="164.9" y="161" width="0.2" height="15.0" fill="rgb(236,169,47)" rx="2" ry="2" />
<text text-anchor="" x="167.90" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>profiling::heap::allocate (24 samples, 0.17%)</title><rect x="779.6" y="177" width="2.1" height="15.0" fill="rgb(222,128,14)" rx="2" ry="2" />
<text text-anchor="" x="782.63" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>dyldbootstrap::start(macho_header const*, int, char const**, long, macho_header const*, unsigned long*) (2 samples, 0.01%)</title><rect x="10.0" y="241" width="0.1" height="15.0" fill="rgb(222,207,32)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_mutex_unlock (4 samples, 0.03%)</title><rect x="778.8" y="145" width="0.4" height="15.0" fill="rgb(245,98,35)" rx="2" ry="2" />
<text text-anchor="" x="781.81" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_platform_memset$VARIANT$Unknown (4 samples, 0.03%)</title><rect x="760.3" y="113" width="0.4" height="15.0" fill="rgb(241,134,1)" rx="2" ry="2" />
<text text-anchor="" x="763.30" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) (1 samples, 0.01%)</title><rect x="10.0" y="225" width="0.1" height="15.0" fill="rgb(236,90,44)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io::Write::write_all::h9108690104785495254 (161 samples, 1.15%)</title><rect x="763.9" y="113" width="13.6" height="15.0" fill="rgb(250,226,7)" rx="2" ry="2" />
<text text-anchor="" x="766.92" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
